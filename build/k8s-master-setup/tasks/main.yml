---
#setup master node


- name: Update apt repository
  apt:
    update_cache: yes

- name: Install necessary packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: present

- name: Disable swap
  command: swapoff -a
  ignore_errors: true

# - name: Ensure swap is disabled permanently
#   lineinfile:
#     path: /etc/fstab
#     egexp: '^.*swap.*'
#     state: absent

- name: Ensure swap is disabled in fstab
  lineinfile:
    path: /etc/fstab
    regexp: '^([^#].*swap)'
    line: '# \1'
    backrefs: yes
    state: present
 

- name: Enable necessary kernel modules
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - overlay
    - br_netfilter

- name: Configure sysctl settings
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  with_items:
    - { key: net.bridge.bridge-nf-call-ip6tables, value: 1 }
    - { key: net.bridge.bridge-nf-call-iptables, value: 1 }
    - { key: net.ipv4.ip_forward, value: 1 }

# 
# - name: Hold Kubernetes packages at current version
#   apt:
#     name:
#       - kubelet
#       - kubeadm
#       - kubectl
#     got: held

- name: Mark Kubernetes packages as held
  command: apt-mark hold kubelet kubeadm kubectl

- name: Pulling images required for setting up a Kubernetes cluster
  shell: kubeadm config images pull

- name: Initializing Kubernetes cluster
  shell: kubeadm init --apiserver-advertise-address {{ad_addr}} --pod-network-cidr={{cidr_v}}
  register: output

- name: Storing Logs and Generated token for future purpose.
  local_action: copy content={{ output.stdout }} dest={{ token_file }}

- name: Copying required files
  shell: |
    mkdir -p $HOME/.kube
    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    sudo chown $(id -u):$(id -g) $HOME/.kube/config

- name: Install Network Add-on
  command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml