---
#setup master node


- name: Update apt repository
  apt:
    update_cache: yes

- name: Install necessary packages
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - software-properties-common
    state: present

- name: Disable swap
  command: swapoff -a
  ignore_errors: true

# - name: Ensure swap is disabled permanently
#   lineinfile:
#     path: /etc/fstab
#     egexp: '^.*swap.*'
#     state: absent

- name: Ensure swap is disabled in fstab
  lineinfile:
    path: /etc/fstab
    regexp: '^([^#].*swap)'
    line: '# \1'
    backrefs: yes
    state: present
 

- name: Enable necessary kernel modules
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - overlay
    - br_netfilter

- name: Configure sysctl settings
  sysctl:
    name: "{{ item.key }}"
    value: "{{ item.value }}"
    state: present
    reload: yes
  with_items:
    - { key: net.bridge.bridge-nf-call-ip6tables, value: 1 }
    - { key: net.bridge.bridge-nf-call-iptables, value: 1 }
    - { key: net.ipv4.ip_forward, value: 1 }


# - name: Hold Kubernetes packages at current version
#   apt:
#     name:
#       - kubelet
#       - kubeadm
#       - kubectl
#     got: held

- name: Mark Kubernetes packages as held
  command: apt-mark hold kubelet kubeadm kubectl

- name: Initialize Kubernetes master
  command: kubeadm init --pod-network-cidr=10.244.0.0/16
  register: kubeadm_init
  failed_when: "'error execution phase preflight' in kubeadm_init.stderr"

- name: Configure kubeconfig for the current user
  command: |
    mkdir -p $HOME/.kube
    && cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    && chown $(id -u):$(id -g) $HOME/.kube/config
  
  

# - name: Install Flannel network plugin
#   kubectl:
#     kubeconfig: /etc/kubernetes/admin.conf
#     state: present
#     src: https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

# - name: Print Kubernetes cluster info
#   command: kubectl cluster-info
#   register: cluster_info
  

# - name: Display Kubernetes cluster info
#   debug:
#     msg: "{{ cluster_info.stdout }}"
