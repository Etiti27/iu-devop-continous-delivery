---

    - name: Install required system packages
      package:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present
        update_cache: yes

    - name: Add Dockerâ€™s official GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker APT repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_lsb.codename }} stable
        state: present

    - name: Update the APT package index
      apt:
        update_cache: yes

    - name: Install Docker CE
      package:
        name: docker-ce
        state: present

    - name: Install Docker Compose
      command: >
        curl -sSL https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
      args:
        creates: /usr/local/bin/docker-compose
        executable: /bin/bash

    - name: Set Docker Compose permissions
      file:
        path: /usr/local/bin/docker-compose
        mode: 'a+x'

    - name: Start and enable Docker service
      systemd:
        name: docker
        enabled: yes
        state: started

    - name: Install Ansible
      apt:
        name: ansible
        state: present
      # become: true

   


    # - name: Ensure Docker service is running
    #   service:
    #     name: docker
    #     state: started
    #     enabled: yes
      # become: true

    # - name: Copy Dockerfile to remote host
      # copy:
        # src: /Users/obinna/Desktop/IU/DEVOP/Dockerfile
        # dest: /home/ubuntu/Dockerfile


    - name: Check if Dockerfile exists
      ansible.builtin.stat:
        path: /Users/obinna/Desktop/IU/DEVOP/webapp/Dockerfile
      register: dockerfile_status

    - name: Fail if Dockerfile does not exist
      ansible.builtin.fail:
        msg: "Dockerfile not found!"
      when: not dockerfile_status.stat.exists


    - name: build docker image
      docker_image:
        name: "{{docker_image }}"
        source: build  # <-- add
        build:         # <-- add
          path: /Users/obinna/Desktop/IU/DEVOP/webapp/  # <-- move under build:
        tag: latest

    - name: Log in to Docker Hub
      docker_login:
        username: "{{ docker_username }}"   # Your Docker Hub username
        password: "{{ docker_password }}"   # Your Docker Hub password

    - name: Push Docker image to Docker Hub
      docker_image:
        name: "{{ docker_username }}/{{ docker_image }}"   # Replace with your Docker Hub username and image name
        tag: latest
        push: yes
 
    


      
   
